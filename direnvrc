use_erlang() {
    OTP_VERSION="$1"
    if has kerl; then
        OTP_INSTALLATION=$(kerl list installations | grep "^$OTP_VERSION " | cut -d' ' -f2)
        if [ -s "$OTP_INSTALLATION/activate" ] ; then
            tput setaf 2
            echo "Using Erlang/OTP $OTP_VERSION (in $OTP_INSTALLATION) via kerl"
            tput sgr0
            . "$OTP_INSTALLATION/activate"

            export OTP_ROOT="$OTP_INSTALLATION"
            export OTP_VERSION
        else
            tput setaf 1
            echo "Erlang/OTP $OTP_VERSION not available via kerl; using default"
            tput sgr0
        fi
    else
        tput setaf 1
        echo "kerl not available; using default Erlang"
        tput sgr0
    fi
}

use_elixir() {
    ELIXIR_VERSION="$1"
    if has kiex; then
        if [ -s "$HOME/.kiex/elixirs/elixir-$ELIXIR_VERSION.env" ]; then
            tput setaf 2
            echo "Using Elixir $ELIXIR_VERSION via kiex"
            tput sgr0
            . "$HOME/.kiex/elixirs/elixir-$ELIXIR_VERSION.env"
        else
            tput setaf 1
            echo "Elixir $ELIXIR_VERSION not available via kiex; using default"
            tput sgr0
        fi
    else
        tput setaf 1
        echo "kiex not available; using default Elixir"
        tput sgr0
    fi
}

# ~/Source/pyenv/pyenv/plugins/python-build/bin/python-build 2.7.15 ~/.pyenv/pythons/2.7.15

use_python() {
    PYTHON_VERSION="$1"
    if [ -s "$HOME/.pyenv/pythons/$PYTHON_VERSION" ]; then
        load_prefix "$HOME/.pyenv/pythons/$PYTHON_VERSION"
    else
        tput setaf 1
        echo "Python $PYTHON_VERSION not available; using default"
        tput sgr0
    fi
}

# ~/Source/postmodern/ruby-install-0.7.0/bin/ruby-install --rubies-dir ~/.rbenv/versions/2.4.4 ruby 2.4.4

use_ruby() {
    RUBY_VERSION="$1"
    if [ -s "$HOME/.rbenv/versions/$RUBY_VERSION" ]; then
        load_prefix "$HOME/.rbenv/versions/$RUBY_VERSION/ruby-$RUBY_VERSION"
    else
        tput setaf 1
        echo "Ruby $RUBY_VERSION not available; using default"
        tput sgr0
    fi
}

use_nodejs() {
    NODE_VERSION="$1"

    type nvm >/dev/null 2>&1 || . ~/.nvm/nvm.sh
    nvm use "$NODE_VERSION"
}
